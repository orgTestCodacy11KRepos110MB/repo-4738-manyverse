diff --git a/node_modules/@staltz/react-native-image-viewing/dist/components/ImageItem/ImageItem.web.js b/node_modules/@staltz/react-native-image-viewing/dist/components/ImageItem/ImageItem.web.js
index 32bb3cc..58e3465 100644
--- a/node_modules/@staltz/react-native-image-viewing/dist/components/ImageItem/ImageItem.web.js
+++ b/node_modules/@staltz/react-native-image-viewing/dist/components/ImageItem/ImageItem.web.js
@@ -1,9 +1,21 @@
-/**
- * Copyright (c) JOB TODAY S.A. and its affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- */
-import ImageItem from "./ImageItem.android";
-export default ImageItem;
+import React, { useState, useCallback } from "react";
+import { View, Image, Dimensions } from "react-native";
+import useImageDimensions from "../../hooks/useImageDimensions";
+import { ImageLoading } from "./ImageLoading";
+const ImageItem = ({ imageSrc }) => {
+    const SCREEN = Dimensions.get('window');
+    const SCREEN_WIDTH = SCREEN.width;
+    const SCREEN_HEIGHT = SCREEN.height;
+    const imageDimensions = useImageDimensions(imageSrc);
+    const [isLoaded, setLoadEnd] = useState(false);
+    const onLoaded = useCallback(() => setLoadEnd(true), []);
+    const imagesStyles = imageDimensions ? {
+        width: '100%',
+        height: '100%',
+    } : null;
+    return (<View style={{ width: SCREEN_WIDTH, height: SCREEN_HEIGHT, flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>
+      <Image source={imageSrc} style={imagesStyles} resizeMode={'contain'} onLoad={onLoaded}/>
+      {(!isLoaded || !imageDimensions) && <ImageLoading />}
+    </View>);
+};
+export default React.memo(ImageItem);
